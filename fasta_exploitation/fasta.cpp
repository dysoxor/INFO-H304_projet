#include "fasta.h"


pair< string, string > readFasta(string fichier){
  ifstream input(fichier);
  string line, name, content;
  //tant qu'on n'est pas en fin de fichier on lit
  Liste* listeProtein = new Liste();
  if(!input.good()){
      return {name, content};
  }else{
      while( getline( input, line ).good() ){
          if( line[0] == '>' ){
            if(!name.empty()){
              listeProtein->insere(name, content);
            }
            name = line.substr(1);
          } else if( !name.empty() ){
            content+=line;
          }

      }
      if ( listeProtein->getNombreProtein() > 1 )
        listeProtein->insere(name, content);
      listeProtein->imprimeListe();
      return {name, content};
    }
}

Protein::Protein(string n, string s){
  name = n;
  sequence = s;
  suivant = NULL;
}

void Protein::setSuivant(Protein* s){
  suivant = s;
}

Protein* Protein::getSuivant() const{
  return suivant;
}

string Protein::getName() const{
  return name;
}

string Protein::getSeqence() const{
  return sequence;
}

Liste::Liste(){
  nombreProtein = 0;
  tete = NULL;
}

Liste::~Liste(){
  while (tete != NULL)
    supprime();
}
void Liste::insere(string n, string s){
  Protein* p = new Protein(n, s);
  p->setSuivant(tete);
  tete=p;
  nombreProtein++;
}

void Liste::supprime(){
  Protein* t = tete;
  tete = tete->getSuivant();
  delete t;
  nombreProtein--;
}

void Liste::imprimeListe(){
  Protein* t = tete;
  for(int i = 0; i < nombreProtein; i++){
    cout << i << "name:  " << t->getName() << endl;
    cout << "sequence:  " << t->getSeqence() << endl;
    t = t->getSuivant();
  }
}

int Liste::getNombreProtein() const{
  return nombreProtein;
}

Protein* Liste::getTete(){
  return tete;
}
